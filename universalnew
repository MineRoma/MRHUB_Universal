local Players = game:GetService("Players")
local TeleportService = game:GetService("TeleportService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local CoreGui = game:GetService("CoreGui")
local HttpService = game:GetService("HttpService")

-- –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–π
local flying = false
local noclip = false
local tpToolEnabled = false
local safeNoclip = false
local safeTP = false
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local currentWalkspeed = humanoid.WalkSpeed
local currentJumpPower = humanoid.JumpPower

-- –û—Å–Ω–æ–≤–Ω–æ–π GUI
local mainGUI = Instance.new("ScreenGui")
mainGUI.Name = "UniversalHackGUI"
mainGUI.Parent = CoreGui

-- –ì–ª–∞–≤–Ω–∞—è –∫–Ω–æ–ø–∫–∞ toggle
local toggleButton = Instance.new("TextButton")
toggleButton.Size = UDim2.new(0, 50, 0, 50)
toggleButton.Position = UDim2.new(0, 10, 0, 10)
toggleButton.BackgroundColor3 = Color3.new(0.2, 0.2, 0.8)
toggleButton.TextColor3 = Color3.new(1, 1, 1)
toggleButton.Text = "‚ò∞"
toggleButton.TextSize = 20
toggleButton.ZIndex = 10
toggleButton.Parent = mainGUI

-- –û—Å–Ω–æ–≤–Ω–æ–π —Ñ—Ä–µ–π–º (—Å–∫—Ä—ã—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 400, 0, 450)
mainFrame.Position = UDim2.new(0, 70, 0, 10)
mainFrame.BackgroundColor3 = Color3.new(0.1, 0.1, 0.2)
mainFrame.Visible = false
mainFrame.Parent = mainGUI

-- –ó–∞–≥–æ–ª–æ–≤–æ–∫
local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, 0, 0, 30)
title.BackgroundColor3 = Color3.new(0.2, 0.2, 0.4)
title.TextColor3 = Color3.new(1, 1, 1)
title.Text = "Universal Hack Menu"
title.TextSize = 16
title.Parent = mainFrame

-- –í–∫–ª–∞–¥–∫–∏
local tabsFrame = Instance.new("Frame")
tabsFrame.Size = UDim2.new(1, 0, 0, 30)
tabsFrame.Position = UDim2.new(0, 0, 0, 30)
tabsFrame.BackgroundColor3 = Color3.new(0.15, 0.15, 0.25)
tabsFrame.Parent = mainFrame

-- –ö–æ–Ω—Ç–µ–Ω—Ç –≤–∫–ª–∞–¥–æ–∫
local contentFrame = Instance.new("Frame")
contentFrame.Size = UDim2.new(1, 0, 1, -60)
contentFrame.Position = UDim2.new(0, 0, 0, 60)
contentFrame.BackgroundColor3 = Color3.new(0.08, 0.08, 0.15)
contentFrame.Parent = mainFrame

-- –°–æ–∑–¥–∞–Ω–∏–µ –≤–∫–ª–∞–¥–æ–∫
local tabs = {"Logs", "Teleport", "Universal"}
local currentTab = "Logs"

local function createTabButton(name, position)
    local button = Instance.new("TextButton")
    button.Size = UDim2.new(1/3, 0, 1, 0)
    button.Position = UDim2.new(position, 0, 0, 0)
    button.BackgroundColor3 = Color3.new(0.2, 0.2, 0.3)
    button.TextColor3 = Color3.new(1, 1, 1)
    button.Text = name
    button.TextSize = 14
    button.Parent = tabsFrame
    
    button.MouseButton1Click:Connect(function()
        currentTab = name
        -- –û–±–Ω–æ–≤–ª—è–µ–º –≤–∏–¥–∏–º–æ—Å—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç–∞
        for _, child in pairs(contentFrame:GetChildren()) do
            child.Visible = false
        end
        if contentFrame:FindFirstChild(name .. "Content") then
            contentFrame:FindFirstChild(name .. "Content").Visible = true
        end
        
        -- –û–±–Ω–æ–≤–ª—è–µ–º —Ü–≤–µ—Ç–∞ –∫–Ω–æ–ø–æ–∫
        for _, btn in pairs(tabsFrame:GetChildren()) do
            if btn:IsA("TextButton") then
                if btn.Text == name then
                    btn.BackgroundColor3 = Color3.new(0.3, 0.3, 0.5)
                else
                    btn.BackgroundColor3 = Color3.new(0.2, 0.2, 0.3)
                end
            end
        end
    end)
    
    return button
end

-- –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –∫–∞–∂–¥–æ–π –≤–∫–ª–∞–¥–∫–∏

-- –í–∫–ª–∞–¥–∫–∞ Logs
local logsContent = Instance.new("ScrollingFrame")
logsContent.Name = "LogsContent"
logsContent.Size = UDim2.new(1, 0, 1, 0)
logsContent.BackgroundTransparency = 1
logsContent.ScrollBarThickness = 8
logsContent.Visible = true
logsContent.Parent = contentFrame

local logsLayout = Instance.new("UIListLayout")
logsLayout.Parent = logsContent

-- –í–∫–ª–∞–¥–∫–∞ Teleport
local teleportContent = Instance.new("ScrollingFrame")
teleportContent.Name = "TeleportContent"
teleportContent.Size = UDim2.new(1, 0, 1, 0)
teleportContent.BackgroundTransparency = 1
teleportContent.ScrollBarThickness = 8
teleportContent.Visible = false
teleportContent.Parent = contentFrame

local teleportLayout = Instance.new("UIListLayout")
teleportLayout.Parent = teleportContent

-- –í–∫–ª–∞–¥–∫–∞ Universal
local universalContent = Instance.new("ScrollingFrame")
universalContent.Name = "UniversalContent"
universalContent.Size = UDim2.new(1, 0, 1, 0)
universalContent.BackgroundTransparency = 1
universalContent.ScrollBarThickness = 8
universalContent.Visible = false
universalContent.Parent = contentFrame

local universalLayout = Instance.new("UIListLayout")
universalLayout.Parent = universalContent

-- –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –≤–∫–ª–∞–¥–æ–∫
for i, tabName in ipairs(tabs) do
    createTabButton(tabName, (i-1)/3)
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
local function log(message, color)
    color = color or Color3.new(1, 1, 1)
    
    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(1, -10, 0, 25)
    label.Position = UDim2.new(0, 5, 0, 0)
    label.BackgroundTransparency = 1
    label.Text = "[" .. os.date("%H:%M:%S") .. "] " .. message
    label.TextColor3 = color
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.TextYAlignment = Enum.TextYAlignment.Center
    label.TextScaled = false
    label.TextSize = 12
    label.Parent = logsContent
    
    logsContent.CanvasSize = UDim2.new(0, 0, 0, logsLayout.AbsoluteContentSize.Y)
    logsContent.CanvasPosition = Vector2.new(0, logsLayout.AbsoluteContentSize.Y)
    
    print(message)
end

-- –ö–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏–∏
local currentPlaceLabel = Instance.new("TextLabel")
currentPlaceLabel.Size = UDim2.new(0.9, 0, 0, 25)
currentPlaceLabel.Position = UDim2.new(0.05, 0, 0, 0)
currentPlaceLabel.BackgroundTransparency = 1
currentPlaceLabel.TextColor3 = Color3.new(0, 1, 1)
currentPlaceLabel.Text = "Current Place ID: " .. game.PlaceId
currentPlaceLabel.TextXAlignment = Enum.TextXAlignment.Left
currentPlaceLabel.Parent = teleportContent

local teleportInputFrame = Instance.new("Frame")
teleportInputFrame.Size = UDim2.new(0.9, 0, 0, 40)
teleportInputFrame.BackgroundTransparency = 1
teleportInputFrame.Parent = teleportContent

local teleportInput = Instance.new("TextBox")
teleportInput.Size = UDim2.new(0.7, 0, 0, 30)
teleportInput.Position = UDim2.new(0, 0, 0, 0)
teleportInput.BackgroundColor3 = Color3.new(0.2, 0.2, 0.3)
teleportInput.TextColor3 = Color3.new(1, 1, 1)
teleportInput.PlaceholderText = "Enter Place ID"
teleportInput.Text = ""
teleportInput.Parent = teleportInputFrame

local teleportButton = Instance.new("TextButton")
teleportButton.Size = UDim2.new(0.25, 0, 0, 30)
teleportButton.Position = UDim2.new(0.77, 0, 0, 0)
teleportButton.BackgroundColor3 = Color3.new(0.2, 0.6, 0.2)
teleportButton.TextColor3 = Color3.new(1, 1, 1)
teleportButton.Text = "Teleport"
teleportButton.Parent = teleportInputFrame

local quickTeleportLabel = Instance.new("TextLabel")
quickTeleportLabel.Size = UDim2.new(0.9, 0, 0, 20)
quickTeleportLabel.BackgroundTransparency = 1
quickTeleportLabel.TextColor3 = Color3.new(1, 1, 1)
quickTeleportLabel.Text = "Quick Teleport:"
quickTeleportLabel.TextXAlignment = Enum.TextXAlignment.Left
quickTeleportLabel.Parent = teleportContent

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–Ω–æ–ø–æ–∫ –±—ã—Å—Ç—Ä–æ–π —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏–∏
local function createQuickTeleportButton(name, placeId)
    local button = Instance.new("TextButton")
    button.Size = UDim2.new(0.9, 0, 0, 25)
    button.BackgroundColor3 = Color3.new(0.3, 0.3, 0.5)
    button.TextColor3 = Color3.new(1, 1, 1)
    button.Text = name
    button.Parent = teleportContent
    
    button.MouseButton1Click:Connect(function()
        teleportInput.Text = tostring(placeId)
        local success, errorMsg = pcall(function()
            TeleportService:Teleport(placeId, player)
        end)
        
        if success then
            log("Teleporting to " .. name .. " (ID: " .. placeId .. ")", Color3.new(0, 1, 0))
        else
            log("Teleport failed: " .. tostring(errorMsg), Color3.new(1, 0, 0))
        end
    end)
end

-- –ü—Ä–∏–º–µ—Ä—ã –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –º–µ—Å—Ç
createQuickTeleportButton("üî∑ MeepCity", 370731277)
createQuickTeleportButton("üê∂ Adopt Me", 920587237)
createQuickTeleportButton("üè† Brookhaven", 4924922222)
createQuickTeleportButton("üî´ Arsenal", 286090429)
createQuickTeleportButton("üöó Vehicle Simulator", 3956818381)
createQuickTeleportButton("üëª Doors", 6516141723)

-- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏–∏
teleportButton.MouseButton1Click:Connect(function()
    local placeId = tonumber(teleportInput.Text)
    if placeId then
        local success, errorMsg = pcall(function()
            TeleportService:Teleport(placeId, player)
        end)
        
        if success then
            log("Teleporting to Place ID: " .. placeId, Color3.new(0, 1, 0))
        else
            log("Teleport failed: " .. tostring(errorMsg), Color3.new(1, 0, 0))
        end
    else
        log("Invalid Place ID", Color3.new(1, 0, 0))
    end
end)

-- –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è Universal –≤–∫–ª–∞–¥–∫–∏

-- –°–æ–∑–¥–∞–Ω–∏–µ —Å–ª–∞–π–¥–µ—Ä–∞
local function createSlider(name, min, max, default, callback)
    local sliderFrame = Instance.new("Frame")
    sliderFrame.Size = UDim2.new(0.9, 0, 0, 60)
    sliderFrame.BackgroundColor3 = Color3.new(0.15, 0.15, 0.25)
    sliderFrame.Parent = universalContent
    
    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(1, 0, 0, 20)
    label.BackgroundTransparency = 1
    label.TextColor3 = Color3.new(1, 1, 1)
    label.Text = name .. ": " .. default
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Parent = sliderFrame
    
    local slider = Instance.new("TextButton")
    slider.Size = UDim2.new(1, -10, 0, 20)
    slider.Position = UDim2.new(0, 5, 0, 25)
    slider.BackgroundColor3 = Color3.new(0.1, 0.1, 0.2)
    slider.Text = ""
    slider.AutoButtonColor = false
    slider.Parent = sliderFrame
    
    local fill = Instance.new("Frame")
    fill.Size = UDim2.new((default - min) / (max - min), 0, 1, 0)
    fill.BackgroundColor3 = Color3.new(0.2, 0.5, 1)
    fill.Parent = slider
    
    local button = Instance.new("TextButton")
    button.Size = UDim2.new(0, 10, 1, 0)
    button.BackgroundColor3 = Color3.new(1, 1, 1)
    button.Position = UDim2.new((default - min) / (max - min), -5, 0, 0)
    button.Text = ""
    button.AutoButtonColor = false
    button.Parent = slider
    
    local dragging = false
    
    button.MouseButton1Down:Connect(function()
        dragging = true
    end)
    
    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)
    
    slider.MouseButton1Click:Connect(function()
        local mouse = UserInputService:GetMouseLocation()
        local relativeX = mouse.X - slider.AbsolutePosition.X
        local percentage = math.clamp(relativeX / slider.AbsoluteSize.X, 0, 1)
        local value = min + (max - min) * percentage
        callback(value)
        label.Text = name .. ": " .. math.floor(value)
        fill.Size = UDim2.new(percentage, 0, 1, 0)
        button.Position = UDim2.new(percentage, -5, 0, 0)
    end)
    
    local connection
    connection = RunService.Heartbeat:Connect(function()
        if dragging then
            local mouse = UserInputService:GetMouseLocation()
            local relativeX = mouse.X - slider.AbsolutePosition.X
            local percentage = math.clamp(relativeX / slider.AbsoluteSize.X, 0, 1)
            local value = min + (max - min) * percentage
            callback(value)
            label.Text = name .. ": " .. math.floor(value)
            fill.Size = UDim2.new(percentage, 0, 1, 0)
            button.Position = UDim2.new(percentage, -5, 0, 0)
        end
    end)
    
    return sliderFrame
end

-- –°–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—è
local function createToggle(name, default, callback)
    local toggleFrame = Instance.new("Frame")
    toggleFrame.Size = UDim2.new(0.9, 0, 0, 30)
    toggleFrame.BackgroundColor3 = Color3.new(0.15, 0.15, 0.25)
    toggleFrame.Parent = universalContent
    
    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(0.7, 0, 1, 0)
    label.BackgroundTransparency = 1
    label.TextColor3 = Color3.new(1, 1, 1)
    label.Text = name
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Parent = toggleFrame
    
    local toggleButton = Instance.new("TextButton")
    toggleButton.Size = UDim2.new(0, 50, 0, 20)
    toggleButton.Position = UDim2.new(0.7, 0, 0.15, 0)
    toggleButton.BackgroundColor3 = default and Color3.new(0, 1, 0) or Color3.new(1, 0, 0)
    toggleButton.Text = default and "ON" or "OFF"
    toggleButton.TextColor3 = Color3.new(1, 1, 1)
    toggleButton.Parent = toggleFrame
    
    toggleButton.MouseButton1Click:Connect(function()
        local newState = not (toggleButton.Text == "ON")
        toggleButton.BackgroundColor3 = newState and Color3.new(0, 1, 0) or Color3.new(1, 0, 0)
        toggleButton.Text = newState and "ON" or "OFF"
        callback(newState)
    end)
    
    return toggleFrame
end

-- –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –º–æ–¥–æ–≤

-- Fly
local flySpeed = 50
local bodyVelocity
local flyConnection

local function toggleFly(state)
    flying = state
    
    if flying then
        log("Fly: ON", Color3.new(0, 1, 0))
        
        if character and character:FindFirstChild("HumanoidRootPart") then
            humanoid.PlatformStand = true
            
            if bodyVelocity then
                bodyVelocity:Destroy()
                bodyVelocity = nil
            end
            
            bodyVelocity = Instance.new("BodyVelocity")
            bodyVelocity.Velocity = Vector3.new(0, 0, 0)
            bodyVelocity.MaxForce = Vector3.new(40000, 40000, 40000)
            bodyVelocity.Parent = character.HumanoidRootPart
            
            if flyConnection then
                flyConnection:Disconnect()
            end
            
            flyConnection = RunService.Heartbeat:Connect(function()
                if not flying or not character or not bodyVelocity or not character:FindFirstChild("HumanoidRootPart") then
                    if flyConnection then
                        flyConnection:Disconnect()
                    end
                    return
                end
                
                local root = character.HumanoidRootPart
                local camera = workspace.CurrentCamera
                local direction = Vector3.new(0, 0, 0)
                
                if UserInputService:IsKeyDown(Enum.KeyCode.W) then
                    direction = direction + camera.CFrame.LookVector
                end
                if UserInputService:IsKeyDown(Enum.KeyCode.S) then
                    direction = direction - camera.CFrame.LookVector
                end
                if UserInputService:IsKeyDown(Enum.KeyCode.A) then
                    direction = direction - camera.CFrame.RightVector
                end
                if UserInputService:IsKeyDown(Enum.KeyCode.D) then
                    direction = direction + camera.CFrame.RightVector
                end
                if UserInputService:IsKeyDown(Enum.KeyCode.Space) then
                    direction = direction + Vector3.new(0, 1, 0)
                end
                if UserInputService:IsKeyDown(Enum.KeyCode.LeftShift) then
                    direction = direction - Vector3.new(0, 1, 0)
                end
                
                if direction.Magnitude > 0 then
                    bodyVelocity.Velocity = direction.Unit * flySpeed
                else
                    bodyVelocity.Velocity = Vector3.new(0, 0, 0)
                end
            end)
        else
            log("Fly: Character not found", Color3.new(1, 0, 0))
            flying = false
        end
    else
        log("Fly: OFF", Color3.new(1, 0, 0))
        if bodyVelocity then
            bodyVelocity:Destroy()
            bodyVelocity = nil
        end
        if flyConnection then
            flyConnection:Disconnect()
            flyConnection = nil
        end
        if character and humanoid then
            humanoid.PlatformStand = false
        end
    end
end

-- Noclip —Å –æ–±—Ö–æ–¥–æ–º –∞–Ω—Ç–∏—á–∏—Ç–∞
local noclipConnection
local safeNoclipConnection

local function toggleNoclip(state)
    noclip = state
    
    if noclip then
        log("Noclip: ON", Color3.new(0, 1, 0))
        
        if noclipConnection then
            noclipConnection:Disconnect()
        end
        
        noclipConnection = RunService.Stepped:Connect(function()
            if not noclip or not character then
                if noclipConnection then
                    noclipConnection:Disconnect()
                end
                return
            end
            
            for _, part in pairs(character:GetDescendants()) do
                if part:IsA("BasePart") then
                    part.CanCollide = false
                end
            end
        end)
        
        -- –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –Ω–æ–∫–ª–∏–ø –¥–ª—è –æ–±—Ö–æ–¥–∞ –∞–Ω—Ç–∏—á–∏—Ç–∞
        if safeNoclip then
            if safeNoclipConnection then
                safeNoclipConnection:Disconnect()
            end
            
            safeNoclipConnection = RunService.Heartbeat:Connect(function()
                if not noclip or not character then return end
                
                -- –ò–º–∏—Ç–∞—Ü–∏—è –Ω–æ—Ä–º–∞–ª—å–Ω–æ–≥–æ –¥–≤–∏–∂–µ–Ω–∏—è –¥–ª—è –æ–±—Ö–æ–¥–∞ –∞–Ω—Ç–∏—á–∏—Ç–∞
                if character:FindFirstChild("HumanoidRootPart") then
                    local root = character.HumanoidRootPart
                    
                    -- –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–µ –≤–∫–ª—é—á–µ–Ω–∏–µ –∫–æ–ª–ª–∏–∑–∏–∏ –¥–ª—è –æ–±–º–∞–Ω–∞ –∞–Ω—Ç–∏—á–∏—Ç–∞
                    wait(0.1)
                    for _, part in pairs(character:GetDescendants()) do
                        if part:IsA("BasePart") then
                            part.CanCollide = true
                        end
                    end
                    wait(0.05)
                    for _, part in pairs(character:GetDescendants()) do
                        if part:IsA("BasePart") then
                            part.CanCollide = false
                        end
                    end
                end
            end)
        end
    else
        log("Noclip: OFF", Color3.new(1, 0, 0))
        if noclipConnection then
            noclipConnection:Disconnect()
            noclipConnection = nil
        end
        if safeNoclipConnection then
            safeNoclipConnection:Disconnect()
            safeNoclipConnection = nil
        end
    end
end

-- WalkSpeed
local function setWalkSpeed(speed)
    if humanoid then
        humanoid.WalkSpeed = speed
        log("WalkSpeed: " .. speed, Color3.new(1, 1, 0))
    end
end

-- JumpPower
local function setJumpPower(power)
    if humanoid then
        humanoid.JumpPower = power
        log("JumpPower: " .. power, Color3.new(1, 1, 0))
    end
end

-- TP Tool —Å –æ–±—Ö–æ–¥–æ–º –∞–Ω—Ç–∏—á–∏—Ç–∞
local tpToolConnection

local function safeTeleport(targetCFrame)
    if not character or not character:FindFirstChild("HumanoidRootPart") then return end
    
    local root = character.HumanoidRootPart
    local startPos = root.Position
    local endPos = targetCFrame.Position
    local distance = (endPos - startPos).Magnitude
    
    if safeTP then
        -- –ü–ª–∞–≤–Ω–∞—è —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏—è –¥–ª—è –æ–±—Ö–æ–¥–∞ –∞–Ω—Ç–∏—á–∏—Ç–∞
        local steps = math.max(5, math.floor(distance / 10))
        for i = 1, steps do
            if not character or not character:FindFirstChild("HumanoidRootPart") then break end
            
            local progress = i / steps
            local currentPos = startPos + (endPos - startPos) * progress
            root.CFrame = CFrame.new(currentPos) + (root.CFrame - root.CFrame.Position)
            
            -- –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É —à–∞–≥–∞–º–∏
            wait(0.02)
        end
    else
        -- –ú–≥–Ω–æ–≤–µ–Ω–Ω–∞—è —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏—è
        root.CFrame = targetCFrame
    end
end

local function toggleTPTool(state)
    tpToolEnabled = state
    
    if tpToolEnabled then
        log("TP Tool: ON - Click to teleport", Color3.new(0, 1, 0))
        
        if tpToolConnection then
            tpToolConnection:Disconnect()
        end
        
        tpToolConnection = UserInputService.InputBegan:Connect(function(input, gameProcessed)
            if gameProcessed then return end
            
            if input.UserInputType == Enum.UserInputType.MouseButton1 and tpToolEnabled then
                local mouse = player:GetMouse()
                local target = mouse.Hit.Position
                
                if character and character:FindFirstChild("HumanoidRootPart") then
                    local root = character.HumanoidRootPart
                    local targetCFrame = CFrame.new(target + Vector3.new(0, 3, 0))
                    
                    -- –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ç–µ–ª–µ–ø–æ—Ä—Ç —á–µ—Ä–µ–∑ —Å—Ç–µ–Ω—ã
                    local raycastParams = RaycastParams.new()
                    raycastParams.FilterType = Enum.RaycastFilterType.Blacklist
                    raycastParams.FilterDescendantsInstances = {character}
                    
                    local raycastResult = workspace:Raycast(root.Position, (targetCFrame.Position - root.Position), raycastParams)
                    
                    if raycastResult and safeTP then
                        -- –ï—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏–µ –∏ –≤–∫–ª—é—á–µ–Ω –±–µ–∑–æ–ø–∞—Å–Ω—ã–π —Ä–µ–∂–∏–º, —Ç–µ–ª–µ–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫ –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏—é
                        targetCFrame = CFrame.new(raycastResult.Position + Vector3.new(0, 3, 0))
                        log("Obstacle detected, adjusting teleport position", Color3.new(1, 1, 0))
                    end
                    
                    safeTeleport(targetCFrame)
                    log("Teleported to " .. tostring(target), Color3.new(0.5, 1, 0.5))
                end
            end
        end)
    else
        log("TP Tool: OFF", Color3.new(1, 0, 0))
        if tpToolConnection then
            tpToolConnection:Disconnect()
            tpToolConnection = nil
        end
    end
end

-- –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤ Universal –≤–∫–ª–∞–¥–∫–µ
createToggle("Fly", false, toggleFly)
createSlider("Fly Speed", 1, 100, 50, function(value) flySpeed = value end)
createSlider("WalkSpeed", 16, 200, 16, setWalkSpeed)
createSlider("JumpPower", 50, 200, 50, setJumpPower)
createToggle("Noclip", false, toggleNoclip)
createToggle("Safe Noclip", false, function(state) 
    safeNoclip = state 
    log("Safe Noclip: " .. (state and "ON" or "OFF"), Color3.new(1, 1, 0))
end)
createToggle("TP Tool", false, toggleTPTool)
createToggle("Safe TP", false, function(state) 
    safeTP = state 
    log("Safe TP: " .. (state and "ON" or "OFF"), Color3.new(1, 1, 0))
end)

-- –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
RunService.Heartbeat:Connect(function()
    universalContent.CanvasSize = UDim2.new(0, 0, 0, universalLayout.AbsoluteContentSize.Y)
    teleportContent.CanvasSize = UDim2.new(0, 0, 0, teleportLayout.AbsoluteContentSize.Y)
end)

-- Toggle –æ—Å–Ω–æ–≤–Ω–æ–≥–æ GUI
local guiVisible = false

toggleButton.MouseButton1Click:Connect(function()
    guiVisible = not guiVisible
    mainFrame.Visible = guiVisible
    
    if guiVisible then
        toggleButton.Text = "‚úï"
        toggleButton.BackgroundColor3 = Color3.new(0.8, 0.2, 0.2)
        log("GUI opened", Color3.new(0, 1, 1))
    else
        toggleButton.Text = "‚ò∞"
        toggleButton.BackgroundColor3 = Color3.new(0.2, 0.2, 0.8)
        log("GUI closed", Color3.new(1, 0.5, 0))
    end
end)

-- –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
player.CharacterAdded:Connect(function(newChar)
    character = newChar
    humanoid = newChar:WaitForChild("Humanoid")
    
    -- –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏–π –ø—Ä–∏ —Å–º–µ–Ω–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
    if flying then 
        toggleFly(false)
        flying = false
    end
    if noclip then 
        toggleNoclip(false)
        noclip = false
    end
    if tpToolEnabled then 
        toggleTPTool(false)
        tpToolEnabled = false
    end
    
    log("Character changed", Color3.new(1, 1, 0))
end)

-- –ù–∞—á–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
log("Universal Hack GUI loaded successfully!", Color3.new(0, 1, 0))
log("Use the menu button to open/close the GUI", Color3.new(1, 1, 1))
log("Current Place ID: " .. game.PlaceId, Color3.new(0, 1, 1))

-- –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤–∫–ª–∞–¥–æ–∫
for _, btn in pairs(tabsFrame:GetChildren()) do
    if btn:IsA("TextButton") and btn.Text == "Logs" then
        btn.BackgroundColor3 = Color3.new(0.3, 0.3, 0.5)
    end
end

-- –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ–±—Ö–æ–¥–∞—Ö –∞–Ω—Ç–∏—á–∏—Ç–æ–≤
log("Anti-cheat bypasses available in Universal tab", Color3.new(1, 0.5, 0))
